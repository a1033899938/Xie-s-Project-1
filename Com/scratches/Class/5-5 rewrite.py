# 1、如果继承过程中，发现父类家族中的一个佣人只会扫地，
# 我们就可以给他洗脑，让他啥也不会，然后再教他洗碗擦桌子的技能，那么他就只会洗碗擦桌子了，成为功能专属的佣人
class parent:       # 父类
    def myMethod(self):
        print("调用父类方法")


class Child(parent):        # 子类继承父类
    def myMethod(self):     # 子类重写父类中的方法
        print("调用子类方法")


c = Child()     # 子类实例化
c.myMethod()    # 调用子类中的方法（已经重写了）
super(Child, c).myMethod()      # 调用子类中的方法，这个方法是子类覆写父类之前的。
# 也就是说，通过子类的对象，也可以调用父类的方法，尽管这个父类的方法在子类中已经被覆写了
# 于是我们不需要重新创建一个父类对象，来调用他在子类中被覆写的方法
